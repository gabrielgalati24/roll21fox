{"version":3,"sources":["components/Prueba.tsx","components/canvas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Prueba","props","useState","socket","setSocket","x","y","pos","setpos","useEffect","s","io","disconnect","undefined","on","delta","id","console","log","onStop","e","posicionX","layerX","offsetX","posicionY","layerY","offsetY","emit","handleStop","onDrag","fixedElem","document","createElement","style","cssText","body","appendChild","getBoundingClientRect","removeChild","handleStop1","position","className","draggable","src","alt","posicionesCanvas","Canvas","ref","React","useRef","current","clientWidth","map","angelDust","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+PAqBe,SAASA,EAAOC,GAA2C,MAElCC,mBAAS,MAFyB,gCAKtCA,sBALsC,mBAK3DC,EAL2D,KAKnDC,EALmD,OAM9CF,mBAAmB,CACnCG,EAAEJ,EAAMI,EACRC,EAAEL,EAAMK,IARsD,mBAM5DC,EAN4D,KAMxDC,EANwD,KAgBlEC,qBAAU,WACV,IAAMC,EAAQC,aAAG,0CAIjB,OAFAP,EAAUM,GAEH,WACLA,EAAEE,gBAEH,IAOTH,qBAAU,WAGQ,MAAVN,QAA6BU,IAAXV,GACtBA,EAAOW,GAAG,WAAU,SAACC,GAEdA,EAAMC,KAAOf,EAAMe,KAE1BC,QAAQC,IAAIH,EAAMC,GAAG,KAAMf,EAAMe,IACrCR,EAAO,CACHH,EAAEU,EAAMR,IAAIF,EACZC,EAAES,EAAMR,IAAID,UAKd,CAACH,IAqCH,OACQ,8BAIR,cAAC,IAAD,CACGgB,OAAQ,SAACC,GAAD,OAvCa,SAACA,GAEzB,IAAIC,EAAmBD,EAAEE,OAASF,EAAEG,QAChCC,EAAmBJ,EAAEK,OAASL,EAAEM,QAGxBL,EAtDc,KAsDaG,EArDZ,MAsDnBhB,EAAO,CACHH,EAAEgB,EACFf,EAAEkB,IAEQ,MAAVrB,QAA6BU,IAAXV,GACtBA,EAAOwB,KAAK,SAAS,CACjBX,GAAGf,EAAMe,GACRT,IAAI,CACDF,EAAEgB,EACFf,EAAEkB,MAuBDI,CAAWR,IACzBS,OAAQ,SAACT,GAAD,OAlBuB,SAACA,GACf,IAAIU,EAAYC,SAASC,cAAc,OACvCF,EAAUG,MAAMC,QAAU,kCAC1BH,SAASI,KAAKC,YAAYN,GACbA,EAAUO,wBACvBN,SAASI,KAAKG,YAAYR,GAa7BS,IAEdC,SAAUjC,EAJb,SASM,qBAAKkC,UAAU,SAAf,SACE,qBAAKC,UAAU,QAASD,UAAU,YAAYE,IAAI,0EAA0EC,IAAI,WCvGxI,IAAIC,EAAyC,CAC3C,CACA7B,GAAG,EACHX,EAAE,GACFC,EAAE,IAEJ,CACEU,GAAG,EACHX,EAAE,GACFC,EAAE,KAuCWwC,MApCf,WAAmB,IAAD,EACVC,EAAMC,IAAMC,OAAuB,MAOzC,OANU/C,oBAAiB,UAAA6C,EAAIG,eAAJ,eAAaC,aAAcJ,EAAIG,QAAQC,YAAc,KACtEjD,qBAMT,qBAAKuC,UAAU,cAAeM,IAAKA,EAAnC,SAGGF,EAAiBO,KAAI,SAACC,GAE5B,OACE,cAACrD,EAAD,CAGAK,EAAGgD,EAAUhD,EACbC,EAAG+C,EAAU/C,EACbU,GAAIqC,EAAUrC,IAJTqC,EAAUrC,UCPFsC,MA3Bf,WACE,OACE,cAAC,IAAD,UACE,gCACE,8BACE,6BAEE,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,yBAQN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,cCfGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,K","file":"static/js/main.0edbba82.chunk.js","sourcesContent":["import {  useEffect,useCallback, useState, useRef, createRef  } from \"react\"\r\nimport { io} from \"socket.io-client\"\r\nimport Draggable from 'react-draggable';\r\nimport './prueba.css';\r\n\r\n\r\ninterface Socket {\r\n    on(event: string, callback: (data: any) => void ):any;\r\n    emit(event: string, data: any):any;\r\n}\r\n\r\ninterface Position{\r\n    x:number,\r\n    y:number\r\n}\r\n interface Canvas{\r\n    canvasWith:number\r\n    canvasHeight:number\r\n }\r\n\r\n\r\nexport default function Prueba(props: { x: number, y: number, id:number }){\r\n//  const objecto =createRef(null)\r\n    const [dimensions, setDimensions] = useState(null);\r\n        let canvasWith  = 500\r\n        let canvasHeight = 500\r\n        const [socket, setSocket] = useState<Socket>()\r\n        const[pos,setpos] = useState<Position>({\r\n            x:props.x,\r\n            y:props.y\r\n        })\r\n\r\n        // const callBackRef = useCallback(domNode => {\r\n        //     if (domNode) {\r\n        //       setDimensions(domNode.getBoundingClientRect());\r\n        //     }\r\n        //   }, []);\r\n        useEffect(() => {\r\n        const s:any = io(\"https://futanarichatfox.herokuapp.com/\")\r\n        // const s:any = io(\"http://localhost:3001\")\r\n        setSocket(s)\r\n    \r\n        return () => {\r\n          s.disconnect()\r\n        }\r\n      }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n// console.log(objecto.current?.getBoundingClientRect())\r\n\r\n    if (socket == null || socket === undefined  ) return\r\n    socket.on('prueba1',(delta:any)=>{\r\n        // console.log('enviando',delta)\r\n        if(delta.id !== props.id) return\r\n\r\n    console.log(delta.id,\"  \", props.id)\r\nsetpos({\r\n    x:delta.pos.x,\r\n    y:delta.pos.y\r\n})\r\n\r\n    })\r\n\r\n},[socket])\r\n\r\n\r\n\r\n       const handleStop=(e:any)=>{\r\n// console.log(e)\r\nlet posicionX:number = e.layerX - e.offsetX\r\nlet posicionY:number = e.layerY - e.offsetY\r\n        //    setPx(e.clientX -e.offsetX)\r\n        //    setPy(e.clientY -e.offsetY)\r\n        if( posicionX  > canvasWith || posicionY > canvasHeight) return\r\n        setpos({\r\n            x:posicionX,\r\n            y:posicionY\r\n        })\r\n        if (socket == null || socket === undefined ) return\r\n        socket.emit(\"prueba\",{\r\n            id:props.id,\r\n             pos:{\r\n                x:posicionX,\r\n                y:posicionY\r\n             }\r\n        })\r\n\r\n\r\n                }\r\n                const handleStop1=(e:any)=>{\r\n                    let fixedElem = document.createElement('div');\r\n                    fixedElem.style.cssText = 'position:fixed; top: 0; left: 0';\r\n                    document.body.appendChild(fixedElem);\r\n                    const rect = fixedElem.getBoundingClientRect();\r\n                    document.body.removeChild(fixedElem);\r\n                    // console.log(rect)\r\n         \r\n                         }\r\n \r\n\r\nreturn(\r\n        <div>\r\n\r\n\r\n\r\n<Draggable\r\n   onStop={(e) =>handleStop(e)}\r\n   onDrag={(e) =>handleStop1(e)}\r\n//    grid={[25, 25]}\r\n   position={pos}\r\n   >\r\n\r\n\r\n      {/* <div className=\"p darg\" ref={callBackRef}> */}\r\n      <div className=\"p darg\">\r\n        <img draggable=\"false\"  className=\"imagenPer\" src=\"https://i.pinimg.com/564x/dc/a0/4d/dca04d1d0f1e45385b9ce1db19b754a9.jpg\" alt=\"\"/>\r\n      </div>\r\n      </Draggable>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './canvas.css';\r\nimport Prueba from './Prueba'\r\n\r\ninterface PositionFurry{\r\n  id:number,\r\n  x:number,\r\n  y:number\r\n}\r\n\r\nlet posicionesCanvas: Array<PositionFurry> = [\r\n  {\r\n  id:1,\r\n  x:30,\r\n  y:30\r\n},\r\n{\r\n  id:2,\r\n  x:30,\r\n  y:30\r\n},\r\n];\r\nfunction Canvas() {\r\n  const ref = React.useRef<HTMLDivElement>(null);\r\n  const x = useState<number>(ref.current?.clientWidth ? ref.current.clientWidth : 100 )\r\n  const y = useState<number>()\r\n\r\n  const sd = ()=>{\r\n    // console.log(ref)\r\n  }\r\n  return (\r\n   <div className=\"canvas_main\"  ref={ref} >\r\n\r\n    {\r\n      posicionesCanvas.map((angelDust)=>{\r\n\r\nreturn(\r\n  <Prueba\r\n  key={angelDust.id}\r\n\r\n  x={angelDust.x}\r\n  y={angelDust.y}\r\n  id={angelDust.id}\r\n  ></Prueba>\r\n)\r\n      })\r\n    }\r\n\r\n{/* <button onClick={sd}></button> */}\r\n   </div>\r\n  );\r\n  \r\n}\r\n/*\r\noffsetHeight\r\nclientWidth\r\noffsetTop\r\n*/\r\nexport default Canvas;\r\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Prueba from './components/canvas'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n       \n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <Prueba/>\n          </Route>\n \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}