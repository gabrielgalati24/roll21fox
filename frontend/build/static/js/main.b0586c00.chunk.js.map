{"version":3,"sources":["components/Prueba.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Prueba","useState","Px","setPx","Py","setPy","socket","setSocket","x","y","useEffect","s","io","disconnect","console","log","undefined","on","delta","positionx","positiony","pos1","onStop","e","clientX","offsetX","clientY","offsetY","emit","id","handleStop","position","className","draggable","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAae,SAASA,IAAS,IAAD,EAEJC,mBAAS,IAFL,mBAEjBC,EAFiB,KAEbC,EAFa,OAGJF,mBAAS,IAHL,mBAGjBG,EAHiB,KAGbC,EAHa,OAIIJ,qBAJJ,mBAIjBK,EAJiB,KAITC,EAJS,OAKJN,mBAAS,CACzBO,EAAGN,EACHO,EAAEL,IAPkB,6BAUxBM,qBAAU,WACV,IAAMC,EAAQC,aAAG,0CAGjB,OAFAL,EAAUI,GAEH,WACLA,EAAEE,gBAEH,IAETH,qBAAU,WACNI,QAAQC,IAAIT,GACE,MAAVA,QAA6BU,IAAXV,GACtBA,EAAOW,GAAG,WAAU,SAACC,GACjBJ,QAAQC,IAAIG,GACZf,EAAMe,EAAMC,WACJd,EAAMa,EAAME,iBAOrB,IAeHC,EAAM,CACNb,EAAGN,EACHO,EAAEL,GAEN,OACQ,8BAaR,cAAC,IAAD,CACGkB,OAAQ,SAACC,GAAD,OAlCa,SAACA,GAEdpB,EAAMoB,EAAEC,QAASD,EAAEE,SACnBpB,EAAMkB,EAAEG,QAASH,EAAEI,SAER,MAAVrB,QAA6BU,IAAXV,GACtBA,EAAOsB,KAAK,SAAS,CACjBC,GAAG,EACHV,UAAUI,EAAEC,QAASD,EAAEE,QACvBL,UAAUG,EAAEG,QAASH,EAAEI,UAyBlBG,CAAWP,IACzBQ,SAAUV,EAFb,SAMM,qBAAKW,UAAU,IAAf,SACE,qBAAKC,UAAU,QAASD,UAAU,YAAYE,IAAI,0EAA0EC,IAAI,WCxEzHC,MARf,WACE,OACE,8BACJ,cAACpC,EAAD,OCMeqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0586c00.chunk.js","sourcesContent":["import {  useEffect, useState } from \"react\"\r\nimport { io} from \"socket.io-client\"\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\n\r\ninterface Socket {\r\n    on(event: string, callback: (data: any) => void ):any;\r\n    emit(event: string, data: any):any;\r\n}\r\n\r\n\r\n\r\nexport default function Prueba(){\r\n\r\n        const [Px, setPx] = useState(10)\r\n        const [Py, setPy] = useState(10)\r\n        const [socket, setSocket] = useState<Socket>()\r\n        const[pos,setpos] = useState({\r\n            x :Px,\r\n            y:Py\r\n        })\r\n\r\n        useEffect(() => {\r\n        const s:any = io(\"https://futanarichatfox.herokuapp.com/\")\r\n        setSocket(s)\r\n    \r\n        return () => {\r\n          s.disconnect()\r\n        }\r\n      }, [])\r\n\r\nuseEffect(()=>{\r\n    console.log(socket)\r\n    if (socket == null || socket === undefined ) return\r\n    socket.on('prueba1',(delta:any)=>{\r\n        console.log(delta)\r\n        setPx(delta.positionx)\r\n                setPy(delta.positiony)\r\n    })\r\n\r\n})\r\n\r\n\r\n\r\n       const handleStop=(e:any)=>{\r\n\r\n           setPx(e.clientX -e.offsetX)\r\n           setPy(e.clientY -e.offsetY)\r\n        // setpos(Px,Py)\r\n        if (socket == null || socket === undefined ) return\r\n        socket.emit(\"prueba\",{\r\n            id:1,\r\n            positionx:e.clientX -e.offsetX,\r\n            positiony:e.clientY -e.offsetY\r\n        })\r\n\r\n\r\n                }\r\n \r\nvar pos1= {\r\n    x :Px,\r\n    y:Py\r\n}\r\nreturn(\r\n        <div>\r\n              {/* <Draggable\r\n   onStop={(e) =>handleStop(e)}\r\n   position={pos1}\r\n   >\r\n\r\n\r\n      <div className=\"p\">\r\n        <img draggable=\"false\"  className=\"imagenPer\" src=\"https://static1.e621.net/data/0a/2e/0a2e56b72151e2026f1387671b4f3886.png\" alt=\"\"/>\r\n      </div>\r\n      </Draggable> */}\r\n\r\n\r\n<Draggable\r\n   onStop={(e) =>handleStop(e)}\r\n   position={pos1}\r\n   >\r\n\r\n\r\n      <div className=\"p\">\r\n        <img draggable=\"false\"  className=\"imagenPer\" src=\"https://i.pinimg.com/564x/dc/a0/4d/dca04d1d0f1e45385b9ce1db19b754a9.jpg\" alt=\"\"/>\r\n      </div>\r\n      </Draggable>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Draggable from 'react-draggable';\r\n\r\n\r\n\r\n// import { initiateSocket, disconnectSocket,\r\n//   subscribeToChat, sendMessage } from './sockets/Sockets';\r\n// import socketIOClient from \"socket.io-client\";\r\n// import './App.css';\r\n// const ENDPOINT = \"http://localhost:5000/\";\r\n\r\n// function App() {\r\n//   const rooms = ['A', 'B', 'C'];\r\n//   const [room, setRoom] = useState(rooms[0]);\r\n//   const [message, setMessage] = useState('');\r\n//   const [chat, setChat] = useState([]);\r\n\r\n//   const socket = socketIOClient(ENDPOINT);\r\n//   useEffect(() => {\r\n//     socket.on('chat', msg => {\r\n//       console.log('Websocket event received!');\r\n\r\n//     });\r\n//     if (room) initiateSocket(room);\r\n//     subscribeToChat((err, data) => {\r\n//       if(err) return;\r\n//       setChat(oldChats =>[data, ...oldChats])\r\n//     });\r\n//     return () => {\r\n//       disconnectSocket();\r\n//     }\r\n//   }, [room]);  useEffect(() => {\r\n//     if (room) initiateSocket(room);\r\n//     subscribeToChat((err, data) => {\r\n//       if(err) return;\r\n//       setChat(oldChats =>[data, ...oldChats])\r\n//     });\r\n//     return () => {\r\n//       disconnectSocket();\r\n//     }\r\n//   }, [room]);\r\n//   // const socket = socketIOClient(ENDPOINT);\r\n//   // const [response, setResponse] = useState(\"sdsd\");\r\n//   // useEffect(() => {\r\n//   //   socket.on(\"connection\", (socket) => {\r\n\r\n//   //   });\r\n\r\n//   // //  socket.on(\"connection\", (socket) => {\r\n//   // //   socket.on(\"mensaje-personal\", data => {\r\n//   // //     console.log(\"/\",data)\r\n//   // //     setResponse(data);\r\n//   // // socket.emit('mensaje-personal',response)\r\n//   // //   });\r\n\r\n\r\n\r\n//   // }, [socket]);\r\n//  const handleStop =(e)=>{\r\n//    console.log(e.layerX)\r\n\r\n//  }\r\n\r\n//  const handleStop2=(e)=>{\r\n\r\n\r\n\r\n// }\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//     <button onClick={handleStop2}>hollaaaa</button>\r\n    \r\n//    <Draggable\r\n//    onStop={(e) =>handleStop(e)}>\r\n\r\n\r\n//       <div className=\"p\">\r\n//         <img draggable=\"false\"  className=\"imagenPer\" src=\"https://static1.e621.net/data/0a/2e/0a2e56b72151e2026f1387671b4f3886.png\" alt=\"\"/>\r\n//       </div>\r\n//       </Draggable>\r\n//     </div>\r\n    \r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Prueba from './components/Prueba'\n\nfunction App() {\n  return (\n    <div >\n<Prueba></Prueba>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}